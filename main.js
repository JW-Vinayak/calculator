var app = require('app');  // Module to control application life.var BrowserWindow = require('browser-window');  // Module to create native browser window.var path = require('path');var Menu = require('menu');var MenuItem = require('menu-item');var menu = new Menu();// Report crashes to our server.//require('crash-reporter').start();var monaca;// Keep a global reference of the window object, if you don't, the window will// be closed automatically when the javascript object is GCed.var mainWindow = null;// Quit when all windows are closed.app.on('window-all-closed', function() {  if (process.platform != 'darwin')    app.quit();});// This method will be called when atom-shell has done everything// initialization and ready for creating browser windows.app.on('ready', function() {  // Create the browser window.  mainWindow = new BrowserWindow({width: 285, height: 350, icon: 'play.png'});  // and load the index.html of the app.  var template = null;  if(process.platform === "darwin"){    mainWindow.loadUrl('asar:' + path.join(__dirname,'index.html'));    var template = [    {      label: 'Calculator',      submenu: [    {      label: 'Open',      accelerator: 'Command+O',      click : function() {        mainWindow.webContents.send('changeUrl', '#/');      }    },    {      label: 'About',      accelerator: 'Command+W',      click: function() {        mainWindow.webContents.send('changeUrl', '#/about');      }    },    {      label: 'Reset',      accelerator: 'Command+R',      click: function() {        mainWindow.webContents.send('reset', '');      }    },    {      label: '&Pick Folder',      accelerator: 'Ctrl+P',      click: function() {        var dialog = require('dialog');        var result = dialog.showOpenDialog({ properties: ['openDirectory', 'multiSelections' ]});        mainWindow.webContents.send('pick_folder', result);      }    },    {      type: 'separator'    },    {      label: 'Quit',      accelerator: 'Command+Q',      click: function() { app.quit(); }    },    ]    },    {      label: 'Help',      submenu: []    },    ];    menu = Menu.buildFromTemplate(template);    Menu.setApplicationMenu(menu);  } else {    mainWindow.loadUrl('asar:/' + __dirname + '/index.html');    template = [    {      label: '&Calc',      submenu: [    {      label: '&Open',      accelerator: 'Ctrl+O',      click : function() {        mainWindow.webContents.send('changeUrl', '#/');      }    },    {      label: '&About',      accelerator: 'Ctrl+W',      click: function() {        mainWindow.webContents.send('changeUrl', '#/about');            }    },    ]    },    {      label: '&Action',      submenu: [    {      label: '&Reset',      accelerator: 'Ctrl+R',      click: function() {        mainWindow.webContents.send('reset', '');      }    },    {      label: '&Pick Folder',      accelerator: 'Ctrl+P',      click: function() {        var dialog = require('dialog');        var result = dialog.showOpenDialog({ properties: ['openDirectory', 'multiSelections' ]});        mainWindow.webContents.send('pick_folder', result);      }    },    {    label: '&Fullscreen',    click: function() {      if(mainWindow.isFullScreen())        mainWindow.setFullScreen(false);        else          mainWindow.setFullScreen(true);        }      }      ]    }    ];    menu = Menu.buildFromTemplate(template);    mainWindow.setMenu(menu);  }  // Emitted when the window is closed.  mainWindow.on('closed', function() {    // Dereference the window object, usually you would store windows    // in an array if your app supports multi windows, this is the time    // when you should delete the corresponding element.    mainWindow = null;  });});